name: Build and Manual Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 0.1.0)'
        required: true
        type: string
      release_notes:
        description: 'Release notes'
        required: false
        type: string
        default: 'Release'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Build package
        run: python -m build

      - name: List built files
        run: ls -la dist/

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: dist/
          retention-days: 30

  release:
    needs: build
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-files
          path: dist/

      - name: List downloaded files
        run: ls -la dist/

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.version }}
          release_name: Release ${{ github.event.inputs.version }}
          body: |
            ## Release ${{ github.event.inputs.version }}
            
            ${{ github.event.inputs.release_notes }}
            
            ### Installation
            
            ```bash
            pip install git+https://github.com/${{ github.repository }}.git@${{ github.event.inputs.version }}
            ```
            
            ### Files
            
            - Source distribution (.tar.gz)
            - Wheel distribution (.whl)
          draft: false
          prerelease: false

      - name: Upload Source Distribution
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/bitkoop-miner-cli-${{ github.event.inputs.version }}.tar.gz
          asset_name: bitkoop-miner-cli-${{ github.event.inputs.version }}.tar.gz
          asset_content_type: application/gzip

      - name: Upload Wheel Distribution
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/bitkoop_miner_cli-${{ github.event.inputs.version }}-py3-none-any.whl
          asset_name: bitkoop_miner_cli-${{ github.event.inputs.version }}-py3-none-any.whl
          asset_content_type: application/zip
